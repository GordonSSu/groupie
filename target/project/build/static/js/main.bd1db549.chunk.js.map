{"version":3,"sources":["components/SearchBar.js","components/Footer.js","pages/EventPage.js","pages/UserPage.js","components/register.js","components/login.js","pages/PrivacySetting.js","components/PrivateRoute.js","App.js","reportWebVitals.js","index.js"],"names":["SearchBar","blockedList","handleAdd","setBlockedList","currentUsername","setCurrentUsername","useState","users","setUsers","modifiedUsers","setModifiedUsers","listLength","setListLength","handlePress","e","key","includes","useEffect","length","fetch","then","resp","json","data","filteredUsers","filter","item","id","onKeyDown","getItemValue","items","renderItem","isHighlighted","className","style","background","shouldItemRender","listValue","typedValue","toLowerCase","indexOf","value","onSelect","val","onChange","target","menuStyle","height","overflow","Footer","customStyles","content","top","left","right","bottom","marginRight","transform","width","EventPage","redirectToUserPage","bind","openModal","closeModal","state","setIsOpen","invitees","this","props","history","push","setState","name","document","body","console","log","URLSearchParams","username","localStorage","getItem","blockChoice","type","onClick","isOpen","onRequestClose","contentLabel","Component","UserPage","redirectToEventPage","manageAccount","visible","a","clear","href","submitLogout","Register","setUsername","password","setPassword","confirmPassword","setConfirmPassword","useHistory","handleSubmitRegister","preventDefault","querySelector","classList","add","remove","method","res","text","catch","alert","token","setItem","window","location","reload","Form","onSubmit","Group","size","controlId","Label","Control","autoFocus","marginTop","Button","Login","handleSubmit","user","to","initialList","PrivacySetting","React","list","setList","userToBlock","display","map","index","userToUnBlock","handleDelete","PrivateRoute","component","rest","loggedIn","render","pathname","from","UserContext","createContext","App","isAuthenticating","setIsAuthenticating","Provider","path","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.bd1db549.chunk.js","sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport Autocomplete from 'react-autocomplete'\r\nimport '../styles/searchBar.css'\r\n\r\nexport default function SearchBar({blockedList, setBlockedList, handleAdd, currentUsername, setCurrentUsername}){\r\n    // original users list\r\n    const [users, setUsers] = useState([])\r\n    // user list that changes based on the blockedlist\r\n    const [modifiedUsers, setModifiedUsers] = useState([])\r\n    const [listLength, setListLength] = useState(0)\r\n\r\n    const handlePress = (e) => {\r\n        if(e.key === 'Enter'){\r\n            if(users.includes(currentUsername)){\r\n                handleAdd()\r\n            }\r\n        }\r\n    }\r\n\r\n    // this is to clear input field after pressing enter\r\n    useEffect(() => {\r\n        if(listLength != blockedList.length){\r\n            setCurrentUsername('')\r\n        }\r\n        setListLength(blockedList.length)\r\n    }, [blockedList])\r\n\r\n    // get username list from sql\r\n    useEffect(() => {\r\n        fetch('http://localhost:8080/getUsers')\r\n            .then(resp => resp.json())\r\n            .then(data => {\r\n                setUsers(data)\r\n            })\r\n    }, [])\r\n\r\n    // removes usernames in userlist that have the current user has blocked\r\n    useEffect(() => {\r\n        let filteredUsers = users.filter((item) => !blockedList.includes(item))\r\n        setModifiedUsers(filteredUsers)\r\n    }, [blockedList, users])\r\n\r\n\r\n\r\n    // checks every username in users with what's typed in input\r\n    function renderUsername(listValue, typedValue){\r\n        return listValue.toLowerCase().indexOf(typedValue.toLowerCase()) > -1\r\n    }\r\n\r\n\r\n    return(\r\n        <div id = \"autocomplete-wrapper\" onKeyDown={handlePress}>\r\n            {\r\n                users &&\r\n\r\n                <Autocomplete\r\n                    getItemValue={item => item}\r\n                    items={modifiedUsers}\r\n                    renderItem={(item, isHighlighted) =>\r\n                        <div key={item} className=\"item\" style={{background: isHighlighted ? 'white' : 'lightgray'}}>\r\n                            {item}\r\n                        </div>\r\n                    }\r\n                    shouldItemRender={renderUsername}\r\n                    value={currentUsername}\r\n                    onSelect={(val) => setCurrentUsername(val)}\r\n                    onChange={(e) => setCurrentUsername(e.target.value)}\r\n                    onKeyDown={handlePress}\r\n                    menuStyle={\r\n                        {\r\n                            height: '250px',\r\n                            overflow: 'auto',\r\n                        }\r\n                    }\r\n                />\r\n            }\r\n        </div>\r\n    )\r\n}\r\n","import React, { Component} from 'react';\r\nimport \"../styles/footer.css\";\r\n\r\nexport default function Footer() {\r\n\r\n    return(\r\n        <div className=\"wrap\">\r\n            <p className=\"footer\">&#169;Team 15, 2021</p>\r\n        </div>\r\n    );\r\n}","import '../styles/EventPage.css';\r\nimport React, {Component, useEffect} from 'react';\r\nimport Modal from 'react-modal';\r\nimport SearchBar from '../components/SearchBar'\r\nimport Footer from '../components/Footer';\r\n\r\nconst customStyles = {\r\n  content: {\r\n    top: '50%',\r\n    left: '50%',\r\n    right: 'auto',\r\n    bottom: 'auto',\r\n    marginRight: '-50%',\r\n    transform: 'translate(-50%, -50%)',\r\n    width: '200px',\r\n  },\r\n};\r\n\r\nclass EventPage extends Component {\r\n    constructor() {\r\n        super();\r\n        this.redirectToUserPage = this.redirectToUserPage.bind(this);\r\n        this.openModal = this.openModal.bind(this);\r\n        this.closeModal = this.closeModal.bind(this);\r\n        this.state = {\r\n            setIsOpen: false,\r\n            blockedList: [],\r\n            currentUsername: '',\r\n            invitees: []\r\n        }\r\n      }\r\n\r\n\r\n    redirectToUserPage(){\r\n           this.props.history.push('/UserPage');\r\n    }\r\n\r\n    openModal(){\r\n           this.setState({setIsOpen: true });\r\n    }\r\n\r\n    closeModal(){\r\n        this.setState({setIsOpen: 'none'});\r\n        this.props.history.push('/UserPage');\r\n    }\r\n\r\n    setCurrentUsername(name){\r\n        this.setState({currentUsername: name})\r\n    }\r\n\r\n    handleAdd(name){\r\n        this.setState({invitees: [...this.state.invitees, name]})\r\n    }\r\n\r\n\r\n    componentDidMount() {\r\n        document.body.className=\"userEventBg\"\r\n        console.log(this.state.invitees)\r\n        fetch('http://localhost:8080/getBlockedUsers?' + new URLSearchParams({\r\n            username: localStorage.getItem('username'),\r\n            blockChoice: 'blockedBy'\r\n        }))\r\n            .then(resp => resp.json())\r\n            .then(data => {\r\n                if(data[0] !== \"empty\"){\r\n                    this.setState({blockedList: data})\r\n                }\r\n            })\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <div className=\"evenPage\">\r\n                <h1 className=\"titlenew\"> <span id=\"blue\">Group</span>ie</h1>\r\n                <div className=\"createEvent\">\r\n                <h1 className=\"createTitle\"> Create Event </h1>\r\n                    <div className = \"eventSearchContainer\">\r\n                    <div className=\"form\">\r\n                    <p className=\"event\"> Event Name </p>\r\n                    <input className=\"input\" type=\"text\"/>\r\n                    <br/>\r\n                    <p className=\"date\"> Date </p>\r\n                    <input className=\"input\" type=\"date\"/>\r\n                    <br/>\r\n                    <br/>\r\n                    <button className=\"button1\" onClick={this.openModal}> Create Event </button>\r\n                    <Modal\r\n                        isOpen={this.state.setIsOpen}\r\n                        onRequestClose={this.closeModal}\r\n                        style={customStyles}\r\n                        contentLabel=\"Example Modal\"\r\n                      >\r\n                        <button className=\"buttonBack\" onClick={this.closeModal}> CLOSE</button>\r\n                        <br/>\r\n                        <div className=\"EventSuccess\"> Event is created </div>\r\n                    </Modal>\r\n                    <br/>\r\n                    <br/>\r\n                    <button className=\"button2\" onClick={this.redirectToUserPage}> Cancel </button>\r\n                    </div>\r\n                        <SearchBar blockedList={this.state.blockedList} handleAdd = {this.handleAdd.bind(this)}currentUsername = {this.state.currentUsername} setCurrentUsername={this.setCurrentUsername.bind(this)}/>\r\n                    </div>\r\n                </div>\r\n                <br/>\r\n                <Footer/>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default EventPage;","import '../styles/UserPage.css';\r\nimport { Component} from 'react';\r\nimport Nav from 'react-bootstrap/Nav';\r\nimport Logout from '../components/logout.js';\r\n\r\nclass UserPage extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.redirectToEventPage = this.redirectToEventPage.bind(this);\r\n        this.manageAccount = this.manageAccount.bind(this);\r\n        this.state = {\r\n          visible: false\r\n        }\r\n      }\r\n\r\n      redirectToEventPage() {\r\n         this.props.history.push('/EventPage');\r\n      }\r\n      manageAccount(){\r\n        this.props.history.push('/PrivacySetting');\r\n      }\r\n\r\n      showModal() {\r\n        this.setState({ visible: true })\r\n      }\r\n\r\n      async submitLogout(){\r\n        localStorage.clear();\r\n      }\r\n    componentDidMount(){\r\n        document.body.className=\"userEventBg\"\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <div>\r\n                <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n                  <a className=\"navbar-brand\" href=\"#\"><div className=\"titlenew\"><span id=\"blue\">Group</span>ie</div></a>\r\n                  <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNavAltMarkup\" aria-controls=\"navbarNavAltMarkup\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                    <span className=\"navbar-toggler-icon\"></span>\r\n                  </button>\r\n                  <div className=\"collapse navbar-collapse\" id=\"navbarNavAltMarkup\">\r\n                    <div className=\"navbar-nav\">\r\n                      <a className=\"nav-item nav-link disabled\" href=\"#\">Username</a>\r\n                      <a className=\"nav-item nav-link\" href=\"#/EventPage\">CreateEvents</a>\r\n                      <a className=\"nav-item nav-link disabled\" href=\"#\">Events</a>\r\n                      <a className=\"nav-item nav-link\" href=\"#/\" onClick={this.submitLogout}>Logout</a>\r\n                    </div>\r\n                  </div>\r\n                </nav>\r\n                <div className=\"UserProfile\">\r\n                    <br/>\r\n                    <br/>\r\n                    <br/>\r\n                    <h2> User name </h2>\r\n                    <button className=\"button3\" onClick={this.manageAccount}> Privacy Settings</button>\r\n                    <br/>\r\n                    <button className=\"button3\" onClick={this.redirectToEventPage}> Create Event </button>\r\n                </div>\r\n                <div className=\"Events\">\r\n                    <p className=\"Eventtitle1\">Upcoming Date</p>\r\n                </div>\r\n                <div className=\"Events\">\r\n                    <p className=\"Eventtitle2\">Proposed Date: Confirm Preferences</p>\r\n                </div>\r\n                <div className=\"Events\">\r\n                    <p className=\"Eventtitle3\"> Confirm Date</p>\r\n                </div>\r\n                <div className=\"Footer\"> <p>&#169; Team 15, 2021 </p></div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default UserPage;","import React, { useState, useContext } from \"react\";\r\nimport { useHistory, Redirect } from \"react-router-dom\"\r\nimport '../styles/Login.css'\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Footer from '../components/Footer';\r\n// import 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\n\r\n\r\nexport default function Register() {\r\n\r\n    const [username, setUsername] = useState(\"\")\r\n    const [password, setPassword] = useState(\"\")\r\n    const [confirmPassword, setConfirmPassword] = useState(\"\")\r\n    const history = useHistory()\r\n\r\n\r\n\r\n    const handleSubmitRegister = async (e) => {\r\n        e.preventDefault()\r\n        if (password !== confirmPassword) {\r\n            document.querySelector(\"#duplicateUsername\").classList.add(\"hide\");\r\n            document.querySelector(\"#passwordEmpty\").classList.add(\"hide\");\r\n            document.querySelector(\"#passwordNotMatch\").classList.remove(\"hide\");\r\n            setPassword(\"\");\r\n            setConfirmPassword(\"\");\r\n        }\r\n        else if (password === \"\")\r\n        {\r\n            document.querySelector(\"#duplicateUsername\").classList.add(\"hide\");\r\n            document.querySelector(\"#passwordNotMatch\").classList.add(\"hide\");\r\n            document.querySelector(\"#passwordEmpty\").classList.remove(\"hide\");\r\n            setPassword(\"\");\r\n            setConfirmPassword(\"\");\r\n        }\r\n        else\r\n        {\r\n            const token = await fetch(`http://localhost:8080/registerServlet?username=${username}&password=${password}`, {\r\n                            method: 'POST'\r\n                        }).then(res => res.text()).catch(() => alert(\"Duplicate Username\"))\r\n            if (token) {\r\n                localStorage.setItem('token', token);\r\n                localStorage.setItem('username', username)\r\n                history.push(\"/userpage\");\r\n                window.location.reload();\r\n            }\r\n            else{\r\n                document.querySelector(\"#passwordEmpty\").classList.add(\"hide\");\r\n                document.querySelector(\"#passwordNotMatch\").classList.add(\"hide\");\r\n                document.querySelector(\"#duplicateUsername\").classList.remove(\"hide\");\r\n            }\r\n        }\r\n\r\n\r\n    }\r\n    document.body.classList.add('loginRegisterBg');\r\n    document.body.classList.remove('userEventBg');\r\n    return (\r\n        <>\r\n            <div className=\"Register\">\r\n                <Form onSubmit={handleSubmitRegister}>\r\n                    <div className=\"RegisterForm\">\r\n                        <h1><span id=\"blue\">Group</span>ie</h1>\r\n                        <h5>Welcome!</h5>\r\n                        <br />\r\n                        <Form.Group size=\"lg\" controlId=\"username\">\r\n                            <Form.Label>Username</Form.Label>\r\n                            <br />\r\n                            <Form.Control\r\n                                autoFocus\r\n                                type=\"username\"\r\n                                value={username}\r\n                                onChange={(e) => setUsername(e.target.value)}\r\n                            />\r\n                        </Form.Group>\r\n\r\n                        <Form.Group size=\"lg\" controlId=\"password\" style={{ marginTop: \"20px\" }}>\r\n                            <Form.Label>Password</Form.Label>\r\n                            <br />\r\n                            <Form.Control\r\n                                type=\"password\"\r\n                                value={password}\r\n                                onChange={(e) => setPassword(e.target.value)}\r\n                            />\r\n                        </Form.Group>\r\n                        <Form.Group size=\"lg\" controlId=\"confirmPassword\" style={{ marginTop: \"20px\" }}>\r\n                            <Form.Label>Confirm Password</Form.Label>\r\n                            <br />\r\n                            <Form.Control\r\n                                type=\"password\"\r\n                                value={confirmPassword}\r\n                                onChange={(e) => setConfirmPassword(e.target.value)}\r\n                            />\r\n                        </Form.Group>\r\n                        <small id=\"passwordNotMatch\" className=\"errorText hide\">Passwords don't match</small>\r\n                        <small id=\"passwordEmpty\" className=\"errorText hide\">Password cannot be empty</small>\r\n                        <small id=\"duplicateUsername\" className=\"errorText hide\">Duplicate Username</small>\r\n                        <Button id=\"buttonRegister\" type=\"submit\" style={{ marginTop: \"40px\" }}>\r\n                            Register\r\n                        </Button>\r\n                    </div>\r\n                </Form>\r\n            </div>\r\n            <Footer/>\r\n        </>\r\n    );\r\n}","import React, { useState, useContext } from \"react\";\r\nimport {useHistory, Redirect, Link, BrowserRouter, Route} from \"react-router-dom\"\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport '../styles/Login.css';\r\nimport Register from './register'\r\nimport Footer from '../components/Footer';\r\n\r\nexport default function Login() {\r\n    const [username, setUsername] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const history = useHistory();\r\n\r\n    const handleSubmit = async e => {\r\n        e.preventDefault();\r\n        const user = await fetch(`http://localhost:8080/loginServlet?username=${username}&password=${password}`, {\r\n                      method: 'GET'\r\n                  }).then(data => data.json()).catch(() => document.querySelector(\"#invalidCredentials\").classList.remove(\"hide\"))\r\n        if (user) {\r\n            localStorage.setItem('token', user.token);\r\n            localStorage.setItem('username', username)\r\n            history.push(\"/userpage\");\r\n        }\r\n    }\r\n    document.body.classList.add('loginRegisterBg');\r\n    document.body.classList.remove('userEventBg');\r\n    return (\r\n        <div>\r\n            <h1 className=\"title\"><span id=\"blue\">Group</span>ie</h1>\r\n\r\n            <div className= \"LoginOuterContainer\">\r\n                <div className=\"LoginInnerContainer\">\r\n                    <div className=\"Login\">\r\n                        <h4>Organizing Quality Time with Friends, Simplified</h4>\r\n\r\n                        <Form onSubmit={handleSubmit} >\r\n                            <div className=\"LoginForm\">\r\n                                <Form.Group size=\"lg\" controlId=\"username\" >\r\n                                    <Form.Label>Username</Form.Label>\r\n                                    <br />\r\n                                    <Form.Control\r\n                                        autoFocus\r\n                                        type=\"username\"\r\n                                        value={username}\r\n                                        onChange={(e) => setUsername(e.target.value)}\r\n                                    />\r\n                                </Form.Group>\r\n                                <Form.Group size=\"lg\" controlId=\"password\" style={{ marginTop: \"20px\" }}>\r\n                                    <Form.Label>Password</Form.Label>\r\n                                    <br />\r\n                                    <Form.Control\r\n                                        type=\"password\"\r\n                                        value={password}\r\n                                        onChange={(e) => setPassword(e.target.value)}\r\n                                    />\r\n                                </Form.Group>\r\n                                <small id=\"invalidCredentials\" className=\"errorText hide\">Invalid credentials</small>\r\n                                <br />\r\n                                <Button  type=\"submit\" style={{ marginTop: \"20px\" }} >\r\n                                    Login\r\n                                </Button>\r\n                                <br />\r\n\r\n                            </div>\r\n                        </Form>\r\n                        <h6>Don't have an account?<span>&nbsp;</span>\r\n\r\n                            <Link to=\"/register\">Register</Link>\r\n                        </h6>\r\n\r\n                    </div>\r\n                    {/*<Register />*/}\r\n                </div>\r\n            </div>\r\n            <Footer/>\r\n        </div>\r\n    );\r\n}","import '../styles/PrivacySetting.css';\r\nimport React, {Component, Link, useState, useEffect} from 'react';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport Footer from '../components/Footer';\r\nimport SearchBar from \"../components/SearchBar\";\r\n\r\nconst initialList = [\r\n    'Robin',\r\n    'Dennis'\r\n];\r\n\r\nexport default function PrivacySetting() {\r\n    let [list, setList] = React.useState(initialList);\r\n    const [currentUsername, setCurrentUsername] = useState('')\r\n    console.log(list)\r\n\r\n    useEffect(() => {\r\n        fetch('http://localhost:8080/getBlockedUsers?' + new URLSearchParams({\r\n            username: localStorage.getItem('username'),\r\n            blockChoice: 'blocked'\r\n        }))\r\n            .then(resp => resp.json())\r\n            .then(data => {\r\n                if(data[0] !== \"empty\"){\r\n                    setList(data)\r\n                }\r\n            })\r\n    }, [])\r\n\r\n      function handleAdd(){\r\n          setList(list => ([...list, currentUsername]))\r\n          fetch('http://localhost:8080/blockUser?' + new URLSearchParams({\r\n              username: localStorage.getItem('username'),\r\n              userToBlock: currentUsername\r\n          }),{\r\n              method: 'POST'\r\n          })\r\n              .then(resp => resp.text())\r\n              .then(data => {\r\n                  console.log(data)\r\n              })\r\n      }\r\n\r\n      function handleDelete(name){\r\n          setList(list.filter(username => username != name))\r\n          fetch('http://localhost:8080/unBlockUser?' + new URLSearchParams({\r\n              username: localStorage.getItem('username'),\r\n              userToUnBlock: name\r\n          }),{\r\n              method: 'POST'\r\n          })\r\n              .then(resp => resp.text())\r\n              .then(data => {\r\n                  console.log(data)\r\n              })\r\n      }\r\n\r\n      function redirectToUserPage() {\r\n         this.props.history.push('/UserPage');\r\n      }\r\n\r\n        return (\r\n            <div>\r\n            <h1 className=\"titlenew\"><span id=\"blue\">Group</span>ie</h1>\r\n            <div className=\"PrivacySetting\">\r\n                <h1> User name </h1>\r\n                <div id = \"blockedContainer\">\r\n                    <div style ={{display: 'flex', marginTop: '45px'}}>\r\n                        <SearchBar blockedList = {list} setBlockedList = {setList} handleAdd = {handleAdd} currentUsername = {currentUsername} setCurrentUsername = {setCurrentUsername}/>\r\n                        <button id = \"blockUserBtn\" onClick={handleAdd}> Add to Blocked User List</button>\r\n                    </div>\r\n                    <div>\r\n                        <p className=\"Blocked\">Blocked Users</p>\r\n                        <ul>\r\n                            {list.map((name, index) => (\r\n                                <li key={index}>{name} <button className=\"items\" onClick={()=>handleDelete(name)}> Delete </button></li>\r\n                            ))}\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <Footer/>\r\n            </div>\r\n        );\r\n}\r\n","import React from 'react'\r\nimport { Redirect, Route } from 'react-router-dom'\r\n\r\nconst PrivateRoute = ({ component: Component, ...rest }) => {\r\n\r\n    const loggedIn = localStorage.getItem(\"token\");\r\n\r\n    return (\r\n        <Route\r\n            {...rest}\r\n            render={props =>\r\n                loggedIn ? (\r\n                    <Component {...props} />\r\n                ) : (\r\n                    <Redirect to={{ pathname: '/', state: { from: props.location } }} />\r\n                )\r\n            }\r\n        />\r\n    )\r\n}\r\n\r\nexport default PrivateRoute","import './App.css';\r\nimport { useEffect, useState } from 'react';\r\nimport {HashRouter as Router,Switch, Route, Redirect} from 'react-router-dom';\r\nimport EventPage from './pages/EventPage';\r\nimport UserPage from './pages/UserPage';\r\nimport Login from \"./components/login\";\r\nimport Register from \"./components/register\";\r\nimport PrivacySetting from \"./pages/PrivacySetting\";\r\nimport { createContext } from 'react';\r\nimport PrivateRoute from './components/PrivateRoute'\r\n\r\nconst UserContext = createContext(null);\r\n\r\nvar session_token=localStorage.getItem('token');\r\n\r\nfunction App() {\r\n    const [isAuthenticating, setIsAuthenticating] = useState(true);\r\n    /*useEffect(() => {\r\n        fetch('http://localhost:8080/greeting')\r\n            .then(resp => resp.text())\r\n            .then(data => {\r\n                setHeader(data)\r\n            })\r\n    }, [])*/\r\n//{session_token ? (\r\n//                        <Route path=\"/EventPage\" component={EventPage}/>\r\n//                        ): <Redirect to=\"\" />}\r\n//                        {session_token ? (\r\n//                        <Route path=\"/UserPage\" component={UserPage}/>\r\n//                        ): <Redirect to=\"\" />}}\r\n//                        {session_token ? (\r\n//                        <Route path=\"/PrivacySetting\" exact component={PrivacySetting}/>\r\n//                        ): <Redirect to=\"\" />}}\r\n    return (\r\n        <UserContext.Provider value={{ isAuthenticating, setIsAuthenticating }}>\r\n            <Router>\r\n                      <Switch>\r\n                        <Route path=\"/\" exact component={Login}/>\r\n                        <Route path=\"/register\" exact component={Register} />\r\n                        <PrivateRoute path=\"/EventPage\" component={EventPage}/>\r\n                        <PrivateRoute path=\"/UserPage\" component={UserPage}/>\r\n                        <PrivateRoute path=\"/PrivacySetting\" exact component={PrivacySetting}/>\r\n\r\n                      </Switch>\r\n                  </Router>\r\n        </UserContext.Provider>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n      <App/>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}